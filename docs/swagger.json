{
    "swagger": "2.0",
    "info": {
        "description": "Service for sending notifications to users",
        "title": "Notifier API",
        "contact": {
            "name": "Dima Kalinin",
            "url": "https://dimdimi4-and-fixiki.github.io/dima-portal/",
            "email": "kalinindima123@yandex.ru"
        },
        "version": "0.0.1"
    },
    "basePath": "/api/",
    "paths": {
        "/admin/get_user/": {
            "post": {
                "description": "Return user by user id or user login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "get user info",
                "parameters": [
                    {
                        "description": "no_comm",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.GetUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Resp-entity_UserCommonInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.RespErr"
                        }
                    }
                }
            }
        },
        "/admin/register_service/": {
            "post": {
                "description": "Register new user with user details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Register new service",
                "parameters": [
                    {
                        "description": "Service details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateServiceReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Resp-entity_ServiceUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.RespErr"
                        }
                    }
                }
            }
        },
        "/admin/register_user/": {
            "post": {
                "description": "Register new user with user details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Resp-entity_UserCommonInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.RespErr"
                        }
                    }
                }
            }
        },
        "/v1/decode_jwt/": {
            "post": {
                "description": "Decode JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "View what's inside your JWT token",
                "parameters": [
                    {
                        "description": "JWT token",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.req"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Resp-v1_respDecodeJWT"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.RespErr"
                        }
                    }
                }
            }
        },
        "/v1/register_user/": {
            "post": {
                "description": "Register new user with user details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Register new user with role person",
                "parameters": [
                    {
                        "description": "Auth data and User details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ReqWithAuth-entity_User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Resp-v1_resp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.RespErr"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.RespErr"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.AuthData": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "entity.CreateServiceReq": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                }
            }
        },
        "entity.GetUserInput": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "user_login": {
                    "type": "string"
                }
            }
        },
        "entity.JWTString": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "entity.ReqWithAuth-entity_User": {
            "type": "object",
            "properties": {
                "auth": {
                    "$ref": "#/definitions/entity.AuthData"
                },
                "data": {
                    "$ref": "#/definitions/entity.User"
                }
            }
        },
        "entity.ServiceCred": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                }
            }
        },
        "entity.ServiceUser": {
            "type": "object",
            "properties": {
                "common_info": {
                    "$ref": "#/definitions/entity.ServiceUserCommonInfo"
                },
                "cred": {
                    "$ref": "#/definitions/entity.ServiceCred"
                }
            }
        },
        "entity.ServiceUserCommonInfo": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "cred": {
                    "$ref": "#/definitions/entity.UserCred"
                },
                "info": {
                    "$ref": "#/definitions/entity.UserCommonInfo"
                }
            }
        },
        "entity.UserCommonInfo": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/entity.UserRole"
                }
            }
        },
        "entity.UserCred": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "entity.UserRole": {
            "type": "string",
            "enum": [
                "admin",
                "service",
                "person"
            ],
            "x-enum-varnames": [
                "Admin",
                "Service",
                "Person"
            ]
        },
        "http.ErrForResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "http.Resp-entity_ServiceUser": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "meta": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/entity.ServiceUser"
                }
            }
        },
        "http.Resp-entity_UserCommonInfo": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "meta": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/entity.UserCommonInfo"
                }
            }
        },
        "http.Resp-v1_resp": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "meta": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/v1.resp"
                }
            }
        },
        "http.Resp-v1_respDecodeJWT": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "meta": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/v1.respDecodeJWT"
                }
            }
        },
        "http.RespErr": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/http.ErrForResp"
                },
                "meta": {
                    "type": "string"
                }
            }
        },
        "v1.req": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "v1.resp": {
            "type": "object",
            "properties": {
                "jwt": {
                    "$ref": "#/definitions/entity.JWTString"
                },
                "user": {
                    "$ref": "#/definitions/entity.UserCommonInfo"
                }
            }
        },
        "v1.respDecodeJWT": {
            "type": "object",
            "properties": {
                "user_login": {
                    "type": "string"
                },
                "user_role": {
                    "$ref": "#/definitions/entity.UserRole"
                }
            }
        }
    }
}
