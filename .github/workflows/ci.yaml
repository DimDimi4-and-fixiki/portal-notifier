name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: read

env:
  IMAGE_NAME: "dima-portal-api"
#  DOCKER_REPO_NAME : "dima-portal-api"
  CONTAINER_NAME: "dima-portal-api"
  ENV_FILE_PATH: "./.env"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Set up Go 1.21
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.54
          install-mode: "binary"
          skip-build-cache: true

      - name: Test
        run: go test ./...

  build_and_push:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout master
        uses: actions/checkout@v4

      - name: Decode env vars to .env file
        run: echo ${{ secrets.ENV_PROD }} | base64 --decode > .env

      - name: Check env
        run: cat .env

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/dima-portal-api
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}, dimakalinin/dima-portal-api:latest
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Copy docker-compose via ssh
        uses: garygrossgarten/github-action-scp@v0.8.0
        with:
          local: ci/docker-compose.yaml
          remote: /root/docker_compose/docker-compose.yaml
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy app to VDS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          username: ${{ secrets.SSH_USER }}
          script: |
            sleep 3
            cd docker_compose
            # Stop all
            docker-compose down

            # Run a new container from a new image
            docker-compose up -d \
            --force-recreate --build
